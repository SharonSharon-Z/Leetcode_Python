class Solution(object):
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        if not gas or not cost:
            return -1
        
        total = 0
        cur = 0
        start = 0
        for i in range(len(gas)):  
            dif = gas[i] - cost[i]
            total += dif
            cur += dif
            
            if cur < 0:
                start  = i + 1
                cur = 0
            
        if total >= 0:
            return start
        else:
            return -1
